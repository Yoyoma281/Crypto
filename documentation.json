{
    "pipes": [
        {
            "name": "HourlyChangePipe",
            "id": "pipe-HourlyChangePipe-a9662683cec35e640e356945302a4a714e6d908e196651db401790def2d6fcabe09a67592f4ccd245147a4501e7030c066bb0050229f35734a9dee082fab034b",
            "file": "src/pipes/HourlyChangePercentage/hourly-change.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "currentPrice",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "changeInHour",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentPrice",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "changeInHour",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "hourlyChange",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'hourlyChange',\r\n})\r\nexport class HourlyChangePipe implements PipeTransform {\r\n  transform(currentPrice: number, changeInHour: number): string {\r\n    if (currentPrice === 0) {\r\n      return \"\"; // Avoid division by zero\r\n    }\r\n    // Determine the absolute value of the change\r\n    const absoluteChange = Math.abs(changeInHour);\r\n\r\n    // Calculate the percentage change\r\n    const hourlyChangePercent = (absoluteChange / currentPrice) * 100;\r\n\r\n    return hourlyChangePercent.toFixed(2);\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Article",
            "id": "interface-Article-4cb05e3a207393260ffeedb59645610fddc83d212635fff413042a67693160594bfa22ae7507a8bec3e49330df91b801e9932fb0ee78c04890add7202df4046b",
            "file": "src/models/Articles.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Root {\r\n  status: string\r\n  totalResults: number\r\n  articles: Article[]\r\n}\r\n\r\nexport interface Article {\r\n  source: Source\r\n  author: string\r\n  title: string\r\n  description: string\r\n  url: string\r\n  urlToImage: string\r\n  publishedAt: string\r\n  content: string\r\n}\r\n\r\nexport interface Source {\r\n  id: any\r\n  name: string\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "publishedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Source",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "urlToImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CandleStickData",
            "id": "interface-CandleStickData-3015c5aaf59c5ffa389a91d5ab139832f34caa776e9cdb6d7d69de0ec99074ad847b905377dd2bb69b5f7485a5f64a8d01e053fa057cd5cdebe76b94f22227b9",
            "file": "src/models/CandleStickData.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CandleStickData {\r\n    timestamp: number; // Timestamp in milliseconds since Unix epoch\r\n    open: number; // Opening price\r\n    high: number; // Highest price\r\n    low: number; // Lowest price\r\n    close: number; // Closing price\r\n    volume: number; // Trading volume\r\n    closeTimestamp: number; // Closing timestamp in milliseconds since Unix epoch\r\n    quoteAssetVolume: number; // Quote asset volume\r\n    numberOfTrades: number; // Number of trades\r\n    takerBuyBaseAssetVolume: number; // Taker buy base asset volume\r\n    takerBuyQuoteAssetVolume: number; // Taker buy quote asset volume\r\n    ignore: string; // Ignore field\r\n}\r\n",
            "properties": [
                {
                    "name": "close",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "closeTimestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "high",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "ignore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "low",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "numberOfTrades",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "quoteAssetVolume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "takerBuyBaseAssetVolume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "takerBuyQuoteAssetVolume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "timestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "volume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Coin",
            "id": "interface-Coin-44434398a46d8fc3498b9f792346f5df207241068b2f038391af36cf880c176ca2c9b00fa51ea5bdf27edb973ff74d1d4ec118c80400f5620e5d1801de7c0267",
            "file": "src/models/Coin.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Coin {\r\n  symbol: string;\r\n  priceChange: number; \r\n  priceChangePercent: number; \r\n  HourlyPriceChangePercent: number;\r\n  weightedAvgPrice: number; \r\n  openPrice: number; \r\n  highPrice: number; \r\n  lowPrice: number; \r\n  lastPrice: number; \r\n  volume: number; \r\n  quoteVolume: number;\r\n  openTime: number;\r\n  closeTime: number;\r\n  firstId: number;\r\n  lastId: number;\r\n  count: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "closeTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "firstId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "highPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "HourlyPriceChangePercent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "lastId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "lastPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "lowPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "openPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "openTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "priceChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "priceChangePercent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "quoteVolume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "volume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "weightedAvgPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Root",
            "id": "interface-Root-4cb05e3a207393260ffeedb59645610fddc83d212635fff413042a67693160594bfa22ae7507a8bec3e49330df91b801e9932fb0ee78c04890add7202df4046b",
            "file": "src/models/Articles.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Root {\r\n  status: string\r\n  totalResults: number\r\n  articles: Article[]\r\n}\r\n\r\nexport interface Article {\r\n  source: Source\r\n  author: string\r\n  title: string\r\n  description: string\r\n  url: string\r\n  urlToImage: string\r\n  publishedAt: string\r\n  content: string\r\n}\r\n\r\nexport interface Source {\r\n  id: any\r\n  name: string\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "articles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Article[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "totalResults",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Source",
            "id": "interface-Source-4cb05e3a207393260ffeedb59645610fddc83d212635fff413042a67693160594bfa22ae7507a8bec3e49330df91b801e9932fb0ee78c04890add7202df4046b",
            "file": "src/models/Articles.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Root {\r\n  status: string\r\n  totalResults: number\r\n  articles: Article[]\r\n}\r\n\r\nexport interface Article {\r\n  source: Source\r\n  author: string\r\n  title: string\r\n  description: string\r\n  url: string\r\n  urlToImage: string\r\n  publishedAt: string\r\n  content: string\r\n}\r\n\r\nexport interface Source {\r\n  id: any\r\n  name: string\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "BinanceApiService",
            "id": "injectable-BinanceApiService-f37987513a06a8693c3a355ebce4e460eb98f622b765a81116483928f81409d8d6547184da4b7cb4bbfd5682690b8efbc1f2aee9fe59f4dc25cb798114684b62",
            "file": "src/services/Api/BinanceApi/binance-api.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "'https://api.binance.com/api/v3'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "CurrentCoin",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ws",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WebSocket",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "GetCoin",
                    "args": [
                        {
                            "name": "coin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'BTCUSDT'"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n  returns coin data, based on Coin model.\n",
                    "description": "<p>  returns coin data, based on Coin model.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'BTCUSDT'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHourlyChange",
                    "args": [
                        {
                            "name": "coins",
                            "type": "Coin[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coins",
                            "type": "Coin[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getKlinesData",
                    "args": [
                        {
                            "name": "symbol",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startTime",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "endTime",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieves Kline/candlestick data for a specific symbol and time interval.\n                 If not provided, data from the beginning of time will be fetched.\n               If not provided, data up to the current time will be fetched.\n",
                    "description": "<p>Retrieves Kline/candlestick data for a specific symbol and time interval.\n                 If not provided, data from the beginning of time will be fetched.\n               If not provided, data up to the current time will be fetched.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5130,
                                "end": 5136,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "symbol"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5124,
                                "end": 5129,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>The symbol for which to retrieve data.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5187,
                                "end": 5195,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "interval"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5181,
                                "end": 5186,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>The interval for the candlesticks (e.g., &#39;1m&#39;, &#39;1h&#39;, &#39;1d&#39;).</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5446,
                                "end": 5455,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "startTime"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 5440,
                                "end": 5445,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Optional. The end time in milliseconds for the data range (inclusive).\nIf not provided, data up to the current time will be fetched.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 5267,
                                "end": 5274,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "endTime"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 5261,
                                "end": 5266,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Optional. The start time in milliseconds for the data range (inclusive).\n  If not provided, data from the beginning of time will be fetched.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 5613,
                                "end": 5620,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>An observable emitting an array of candlestick data.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getTopCoins",
                    "args": [
                        {
                            "name": "numberOfCoins",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n  Starts a stream of the top 'NumberOfCoins' from the binance market\n",
                    "description": "<p>  Starts a stream of the top &#39;NumberOfCoins&#39; from the binance market</p>\n",
                    "jsdoctags": [
                        {
                            "name": "numberOfCoins",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTradingPairs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string[]>",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n  returns all trading pairs on the market.\n",
                    "description": "<p>  returns all trading pairs on the market.</p>\n"
                },
                {
                    "name": "StartTradeSocket",
                    "args": [
                        {
                            "name": "coins",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coins",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "stopWebSocket",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribe",
                    "args": [
                        {
                            "name": "coin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Observable,\r\n  Observer,\r\n  map,\r\n  catchError,\r\n  throttleTime,\r\n  merge,\r\n  EMPTY,\r\n  interval,\r\n  switchMap,\r\n  forkJoin,\r\n  of,\r\n} from 'rxjs';\r\nimport { Coin } from '../../../models/Coin';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BinanceApiService {\r\n  private ws!: WebSocket;\r\n  private baseUrl = 'https://api.binance.com/api/v3';\r\n  private CurrentCoin: string = '';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  StartTradeSocket(coins: string[]): Observable<any> {\r\n    coins = coins.map((coin) => coin.toLowerCase());\r\n    const coinStreams: Record<string, Observable<any>> = {};\r\n\r\n    for (const coin of coins) {\r\n      let streamUrl: string;\r\n      streamUrl = `wss://stream.binance.com:9443/ws/${coin}@trade`;\r\n\r\n      if (!coinStreams[coin]) {\r\n        coinStreams[coin] = new Observable((observer: Observer<any>) => {\r\n          const ws = new WebSocket(streamUrl);\r\n\r\n          ws.addEventListener('open', (event) => {\r\n            console.log(`WebSocket connection opened for ${coin}.`, event);\r\n          });\r\n\r\n          ws.addEventListener('message', (event) => {\r\n            const message = JSON.parse(event.data);\r\n            observer.next({ coin, data: message }); // Include the coin identifier in the data\r\n          });\r\n\r\n          ws.addEventListener('close', (event) => {\r\n            console.log(`WebSocket connection closed for ${coin}.`, event);\r\n            observer.complete();\r\n          });\r\n\r\n          ws.addEventListener('error', (event) => {\r\n            console.error(`WebSocket error for ${coin}:`, event);\r\n            observer.error(event);\r\n          });\r\n\r\n          return () => {\r\n            ws.close();\r\n          };\r\n        });\r\n      }\r\n    }\r\n\r\n    const mergedObservable = merge(...Object.values(coinStreams));\r\n\r\n    //If the number of requests becomes too frequent,\r\n    //an HTTP error may occur, indicating that there have been too many requests.\r\n    //This error does not halt the flow of data but rather serves as a notification of the excessive request rate.\r\n    return mergedObservable.pipe(throttleTime(5000));\r\n  }\r\n  stopWebSocket(): void {\r\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n      this.ws.close();\r\n    }\r\n  }\r\n  subscribe(coin: string): void {\r\n    coin = coin.toLocaleLowerCase();\r\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n      this.ws.send(\r\n        JSON.stringify({\r\n          method: 'UNSUBSCRIBE',\r\n          params: [this.CurrentCoin + '@trade'],\r\n          id: 1,\r\n        })\r\n      );\r\n      this.ws.send(\r\n        JSON.stringify({\r\n          method: 'SUBSCRIBE',\r\n          params: [coin + '@trade'],\r\n          id: 1,\r\n        })\r\n      );\r\n      this.CurrentCoin = coin;\r\n    } else {\r\n      console.error(\r\n        'WebSocket is closed and no subscribiption actions can be preformed.'\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   *   returns all trading pairs on the market.\r\n   */\r\n  getTradingPairs(): Observable<string[]> {\r\n    const url = `${this.baseUrl}/exchangeInfo`;\r\n\r\n    return this.http.get<any>(url).pipe(\r\n      map((response) => {\r\n        const supportedPairs: string[] = response.symbols\r\n          .filter((symbol: any) => symbol.status === 'TRADING') // Filter only trading pairs\r\n          .map((symbol: any) => symbol.symbol);\r\n        return supportedPairs;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   *   returns coin data, based on Coin model.\r\n   */\r\n  GetCoin(coin: string = 'BTCUSDT'): Observable<any> {\r\n    const apiUrl = `${this.baseUrl}/ticker?symbol=${coin}`;\r\n\r\n    return this.http.get<any>(apiUrl).pipe(\r\n      catchError((error) => {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   *   Starts a stream of the top 'NumberOfCoins' from the binance market\r\n   */\r\n  getTopCoins(numberOfCoins: number): Observable<any[]> {\r\n    return interval(3000).pipe(\r\n      switchMap(() => {\r\n        const url = `${this.baseUrl}/ticker/24hr`;\r\n\r\n        return this.http.get<any[]>(url).pipe(\r\n          map((data) => {\r\n            // Filter coins traded in USDT\r\n            const usdtCoins = data.filter((coin) =>\r\n              coin.symbol.includes('USDT')\r\n            );\r\n            // Sort USDT coins based on market cap in descending order\r\n            const sortedUsdtCoins = usdtCoins.sort(\r\n              (a, b) => b.marketCap - a.marketCap\r\n            );\r\n            // Truncate prices by keeping only the first two decimal places\r\n            const truncatedCoins = sortedUsdtCoins.map((coin) => {\r\n              const lastPrice = parseFloat(coin.lastPrice);\r\n              return {\r\n                ...coin,\r\n                lastPrice: isNaN(lastPrice)\r\n                  ? coin.lastPrice\r\n                  : lastPrice.toFixed(2),\r\n              };\r\n            });\r\n\r\n            return truncatedCoins.slice(0, numberOfCoins);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n * Retrieves Kline/candlestick data for a specific symbol and time interval.\r\n * @param symbol The symbol for which to retrieve data.\r\n * @param interval The interval for the candlesticks (e.g., '1m', '1h', '1d').\r\n * @param endTime Optional. The start time in milliseconds for the data range (inclusive).\r\n *                  If not provided, data from the beginning of time will be fetched.\r\n * @param startTime Optional. The end time in milliseconds for the data range (inclusive).\r\n *                If not provided, data up to the current time will be fetched.\r\n * @returns An observable emitting an array of candlestick data.\r\n */\r\n  getKlinesData(symbol: string, interval: string, startTime?: number, endTime?: number): Observable<any[]> {\r\n    let params = new HttpParams()\r\n      .set('symbol', symbol)\r\n      .set('interval', interval);\r\n\r\n    if (startTime !== undefined) {\r\n      params = params.set('startTime', startTime.toString());\r\n    }\r\n\r\n    if (endTime !== undefined) {\r\n      params = params.set('endTime', endTime.toString());\r\n    }\r\n    \r\n    else{\r\n      endTime = Date.now()\r\n    }\r\n\r\n    return this.http.get<any[]>(`${this.baseUrl}/klines`, { params }).pipe(\r\n      map((responseData) => {\r\n        return responseData.map((data) => ({\r\n          timestamp: data[0],\r\n          open: parseFloat(data[1]),\r\n          high: parseFloat(data[2]),\r\n          low: parseFloat(data[3]),\r\n          close: parseFloat(data[4]),\r\n          volume: parseFloat(data[5]),\r\n          closeTime: data[6],\r\n          quoteAssetVolume: parseFloat(data[7]),\r\n          numberOfTrades: data[8],\r\n          takerBuyBaseAssetVolume: parseFloat(data[9]),\r\n          takerBuyQuoteAssetVolume: parseFloat(data[10]),\r\n          ignore: parseFloat(data[11]),\r\n        }));\r\n      })\r\n    );\r\n  }\r\n  getHourlyChange(coins: Coin[]): void {\r\n    const currentMillTime: number = Date.now();\r\n    const OneHourAgoMillTime: number = currentMillTime - 3600000;\r\n  \r\n    for (const coin of coins) {\r\n      this.getKlinesData(coin.symbol, '1h', OneHourAgoMillTime, currentMillTime).subscribe(\r\n        (candlesticks) => {\r\n          // Calculate hourly change\r\n          const hourOpen = parseFloat(candlesticks[0].open);\r\n          const hourClose = parseFloat(candlesticks[candlesticks.length - 1].close);\r\n          const absoluteChange = hourClose - hourOpen;\r\n          const hourlyChange = ((absoluteChange / hourOpen) * 100).toFixed(2);\r\n  \r\n          // Assign hourly change to the coin's property\r\n          coin.HourlyPriceChangePercent = Number(hourlyChange);\r\n        },\r\n        (error) => {\r\n          console.error(`Error fetching data for ${coin.symbol}:`, error);\r\n        }\r\n        );\r\n        \r\n    }\r\n  }\r\n  \r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "InternetConnectionService",
            "id": "injectable-InternetConnectionService-9923aa828fddc9ffc97299199ddce25bf2adffb7ca79d323a47e20a5b4e48c146224746d967a202ad5547eb343036b3d8da5aa48deb4e4b47ffb07ae882a7e0c",
            "file": "src/services/Accessories/internet-connection/internet-connection.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "checkConnectivity",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { mapTo } from 'rxjs/operators';\nimport { Observable, fromEvent, merge } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InternetConnectionService {\n  constructor() {}\n\n  checkConnectivity(): Observable<boolean> {\n    // Create an observable from the online and offline events\n    const online$ = fromEvent(window, 'online').pipe(mapTo(true));\n    const offline$ = fromEvent(window, 'offline').pipe(mapTo(false));\n\n    // Merge both observables into one\n    return merge(online$, offline$);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "NewsApiService",
            "id": "injectable-NewsApiService-a85b326d80c96f741294a34710d298eb4aa0c5008e6ac339fa9889e5f6c6b43d161c790f4fd1fbbc0f770e9c35da953364400cce98eeea2ee78077c32f50b9fb",
            "file": "src/services/Api/NewsApi/news-api.service.ts",
            "properties": [
                {
                    "name": "apiKey",
                    "defaultValue": "'2d68032cb7464311b4a5ac763d8b667c'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "apiUrl",
                    "defaultValue": "'https://newsapi.org/v2/everything'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getNews",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Article } from '../../../models/Articles';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewsApiService {\r\n  private apiUrl = 'https://newsapi.org/v2/everything';\r\n  private apiKey = '2d68032cb7464311b4a5ac763d8b667c';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getNews(): Observable<any> {\r\n    const fromDate = '2024-03-03';\r\n    const sortBy = 'publishedAt';\r\n    const query = 'Crypto';\r\n\r\n    const url = `${this.apiUrl}?q=${query}&from=${fromDate}&sortBy=${sortBy}&apiKey=${this.apiKey}`;\r\n\r\n    return this.http.get<Article>(url);\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ScrollToTopService",
            "id": "injectable-ScrollToTopService-cbb83f4e283d898616806192702b9da27f3675a937167bf49e6452099e482080a8f7e9285fbeb45e4e478ccb099e2f1c0945c9e18615d6234c823204c5f9efc3",
            "file": "src/services/Accessories/scrolling/scrolling.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "scrollToTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "scrollToTopOnRouteChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollToTopService {\n\n  constructor(private router: Router) { }\n\n  // Function to scroll to the top of the page\n  scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  // Function to listen for route changes and scroll to the top\n  scrollToTopOnRouteChange() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.scrollToTop();\n      }\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutPageComponent",
            "id": "component-AboutPageComponent-f5580af669248e120dbf4ccec30fd964fef4163305e1730ab8db44c9787d10b46dfdd7081ffdfccfe37c339b4270cecd65ed47e1bad6822579508f974631ded7",
            "file": "src/Components/Pages/Main/about-page/about-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./about-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-page',\r\n  templateUrl: './about-page.component.html',\r\n  styleUrl: './about-page.component.css'\r\n})\r\nexport class AboutPageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./about-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n\r\n    <h2>Welcome to CryptoMarket Your Gateway to the Crypto World!</h2>\r\n\r\n    <p>At CryptoMarket, we're more than just a platform; we're a community of crypto enthusiasts, traders, and\r\n        investors who share a common vision to make the world of digital assets accessible, secure, and rewarding for\r\n        everyone.</p>\r\n\r\n    <h2>Our Story</h2>\r\n    <p>Welcome to Your Crypto Trading Platform, where we strive to provide you with the best trading experience in\r\n        the cryptocurrency market. Our journey began with a vision to create a platform that empowers users to\r\n        navigate the complexities of digital assets with confidence.</p>\r\n\r\n    <h2>Our Mission</h2>\r\n    <p>At Your Crypto Trading Platform, our mission is to democratize access to the world of cryptocurrencies. We aim\r\n        to offer a secure and user-friendly environment where both beginners and experienced traders can thrive.\r\n        Your success is our success.</p>\r\n\r\n    <h2>Why Choose Us?</h2>\r\n    <p>Transparency, innovation, and customer satisfaction are at the core of everything we do. Here are some\r\n        reasons to choose Your Crypto Trading Platform:</p>\r\n    <ul>\r\n        <li>Advanced Trading Tools</li>\r\n        <li>Robust Security Measures</li>\r\n        <li>User-Friendly Interface</li>\r\n        <li>24/7 Customer Support</li>\r\n    </ul>\r\n\r\n   \r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a450d0f00c0336312835bc236571469e69f78a1620dfc56256388a9f03aedd286c53abe28d0b952e38ac95fc7febb048a2d718e0e8505e1cbda60abf8f81540c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Coin } from '../models/Coin';\r\nimport { BinanceApiService } from '../services/Api/BinanceApi/binance-api.service';\r\nimport { InternetConnectionService } from '../services/Accessories/internet-connection/internet-connection.service';\r\nimport { ScrollToTopService } from '../services/Accessories/scrolling/scrolling.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: false,\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css',\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private Api: BinanceApiService,\r\n    private Internet: InternetConnectionService,\r\n    private Scroll: ScrollToTopService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n     this.Scroll.scrollToTopOnRouteChange()\r\n\r\n    this.Internet.checkConnectivity().subscribe((online) => {\r\n      if (online) {\r\n        console.log('Internet connection is available');\r\n        location.reload();\r\n      } else {\r\n        console.log('No internet connection');\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Internet",
                        "type": "InternetConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Scroll",
                        "type": "ScrollToTopService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "Internet",
                        "type": "InternetConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "Scroll",
                        "type": "ScrollToTopService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<header>\r\n  <nav class=\"navbar\">\r\n    <h2>CrytpoMarket</h2>\r\n    <ul>\r\n      <li><a [routerLink]=\"['/']\">Home</a></li>\r\n      <li><a [routerLink]=\"['/Market']\">Demo-Trade</a></li>\r\n      <li class=\"LearnButton\">\r\n        <a href=\"#\">Learn</a>\r\n        <div class=\"menu-window\">\r\n          <ul>\r\n            <li><a [routerLink]=\"['/News']\">news</a></li>\r\n            <li><a [routerLink]=\"['/Trending']\">trending</a></li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n      <li><a href=\"/About\">About</a></li>\r\n    </ul>\r\n    <button><a href=\"/Contact\">Contact me</a></button>\r\n  </nav>\r\n</header>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<footer>\r\n  <ul>\r\n    <button>Get started with the market</button><br><br>\r\n    <li><a class=\"info\" [routerLink]=\"['/']\">Home</a></li>\r\n    <li><a [routerLink]=\"['/Market']\">Market</a></li>\r\n    <li><a [routerLink]=\"['/About']\">About</a></li>\r\n    <li><a [routerLink]=\"['/News']\">News</a></li>\r\n    <li><a [routerLink]=\"['/Analtics']\">Analytics</a></li>\r\n    <li><a href=\"/Resources\">Resources</a></li>\r\n  </ul>\r\n  <div class=\"social-links\">\r\n    <a href=\"https://linkedin.com/in/shai-shaul-94b511252\" class=\"svg-link\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"17.5\" viewBox=\"0 0 448 512\">\r\n        <path fill=\"#1a4899\"\r\n          d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\" />\r\n      </svg>\r\n    </a>\r\n    <a href=\"mailto:shai239@gmail.com\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->\r\n        <path fill=\"#f43606\"\r\n          d=\"M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z\" />\r\n      </svg>\r\n    </a>\r\n  </div>\r\n</footer>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "CoinInfoComponent",
            "id": "component-CoinInfoComponent-6b94a2bb742395408744f44404a46f8e551db8e9fa839a5fb18d4a4746df121704f76f4d373a0d852183c535fb88b0023a4d0d191b2050e018674a3757278bfa",
            "file": "src/Components/Comps/coin-info/coin-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coin-info",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./coin-info.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "Coin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Coin",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "OneHourChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "OneWeekChange",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { BinanceApiService } from '../../../services/Api/BinanceApi/binance-api.service';\r\nimport { Coin } from '../../../models/Coin';\r\n\r\n@Component({\r\n  selector: 'app-coin-info',\r\n  templateUrl: './coin-info.component.html',\r\n  styleUrl: './coin-info.component.css',\r\n})\r\nexport class CoinInfoComponent implements OnInit {\r\n  @Input() Coin!: Coin;  \r\n  OneHourChange: number = 0 \r\n  OneWeekChange: number = 0\r\n\r\n  constructor(private Api: BinanceApiService) {}\r\n\r\n    ngOnInit(): void {\r\n      console.log()\r\n    }\r\n  \r\n}\r\n  \r\n  \r\n\r\n",
            "styleUrl": "./coin-info.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <a class=\"info\" [routerLink]=\"['/Coin', Coin.symbol]\">info</a>\r\n    <img src='./assets/Coin-icons/{{Coin.symbol.replace(\"USDT\", \"\").toLowerCase()}}.svg'>\r\n    <ul>\r\n        <h2>{{Coin.symbol}}</h2>\r\n        <li>{{Coin.lastPrice}}</li>\r\n        <li>{{Coin.priceChangePercent}}</li>\r\n        <li></li>        \r\n    </ul>\r\n</div>"
        },
        {
            "name": "CoinListComponent",
            "id": "component-CoinListComponent-ee31b476ca949993ea5399b0091277ea211981be5fa3446bc7010f64915a7f2cd12cfba56dd510f9a98580b3ac60ef90b6da51f389aa1ed53e99916629f5e581",
            "file": "src/Components/Comps/coin-list/coin-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coin-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./coin-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "CoinSelected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "Trading_Pairs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "CoinSelectChange",
                    "args": [
                        {
                            "name": "newCoin",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newCoin",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "PopulateTradingPairsBox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output } from '@angular/core';\r\nimport { Input, EventEmitter } from '@angular/core';\r\nimport { BinanceApiService } from '../../../services/Api/BinanceApi/binance-api.service';\r\n\r\n@Component({\r\n  selector: 'app-coin-list',\r\n  templateUrl: './coin-list.component.html',\r\n  styleUrl: './coin-list.component.css',\r\n})\r\nexport class CoinListComponent implements OnInit {\r\n  @Output() CoinSelected = new EventEmitter<string>();\r\n  Trading_Pairs: string[] = []\r\n\r\n  constructor(private Api: BinanceApiService){}\r\n\r\n  ngOnInit(): void {\r\n    this.PopulateTradingPairsBox();\r\n  }\r\n\r\n  CoinSelectChange(newCoin: any) {\r\n    const Coin = newCoin.target.value as string\r\n    this.Api.subscribe(Coin);\r\n  }\r\n\r\n  PopulateTradingPairsBox() {\r\n    this.Api.getTradingPairs().subscribe((data) => {\r\n      this.Trading_Pairs = data;\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./coin-list.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<select (change)=\"CoinSelectChange($event)\" name=\"CoinsList\" id=\"\">\r\n  <option *ngFor=\"let coin of Trading_Pairs\" [value]=\"coin\">{{coin}}</option>\r\n</select>"
        },
        {
            "name": "CoinPageComponent",
            "id": "component-CoinPageComponent-8e96f32f511a6bfb4e8a6474379ee0b330ea3f8835eb8f5e178681de677134686ad900d442b9b78e72269aa838aa93c895b00e9084aa7988e5e0a159fe8244fd",
            "file": "src/Components/Pages/Main/coin-page/coin-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coin-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./coin-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Coin",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "dataChartComponentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DataChartComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "EndTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "StartTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "TimeFrameSelected",
                    "defaultValue": "'1M'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "YearInMilli",
                    "defaultValue": "31556952000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "GetCoin",
                    "args": [
                        {
                            "name": "coin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "SelectTimeFrame",
                    "args": [
                        {
                            "name": "TimeFrame",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "TimeFrame",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Coin } from '../../../../models/Coin';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BinanceApiService } from '../../../../services/Api/BinanceApi/binance-api.service';\r\nimport { ScrollToTopService } from '../../../../services/Accessories/scrolling/scrolling.service';\r\nimport { DataChartComponent } from '../../../Comps/data-chart/data-chart.component';\r\nimport { ViewChild } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-coin-page',\r\n  templateUrl: './coin-page.component.html',\r\n  styleUrl: './coin-page.component.css',\r\n})\r\nexport class CoinPageComponent implements OnInit {\r\n  @ViewChild(DataChartComponent, { static: true })\r\n  dataChartComponentRef!: DataChartComponent;\r\n\r\n  StartTime: number = 0;\r\n  EndTime: number = 0\r\n  coin!: Coin;\r\n  YearInMilli = 31556952000\r\n  TimeFrameSelected: string = '1M';\r\n\r\n  constructor(private route: ActivatedRoute, private Api: BinanceApiService, private Scroll: ScrollToTopService) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.Scroll.scrollToTopOnRouteChange()\r\n    const symbol = this.route.snapshot.params['symbol'];\r\n    this.GetCoin(symbol);\r\n  }\r\n  GetCoin(coin: string) {\r\n    if (coin) {\r\n      this.Api.GetCoin(coin).subscribe((data) => {\r\n        this.coin = data;\r\n      });\r\n    } else {\r\n      console.error(`Symbol ${coin} is invalid`);\r\n    }\r\n  }\r\n  SelectTimeFrame(TimeFrame: string) {\r\n    this.TimeFrameSelected = TimeFrame;\r\n    console.log('end time: ', this.EndTime, \"\\n\\n start time: \", this.StartTime);\r\n  }\r\n\r\n  \r\n}\r\n",
            "styleUrl": "./coin-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Scroll",
                        "type": "ScrollToTopService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "Scroll",
                        "type": "ScrollToTopService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <div class=\"Side Trading\">\r\n        <div class=\"Buy-Sell-Buttons\">\r\n            <button class=\"Buy-button\">BUY</button>\r\n            <button class=\"Sell-button\">SELL</button>\r\n        </div>\r\n        <span> Available: </span>\r\n    </div>\r\n    <div class=\"Chart-Container\" *ngIf=\"coin\">\r\n        {{coin.symbol}}\r\n        <img src='./assets/Coin-icons/{{coin.symbol.replace(\"USDT\", \"\").toLowerCase()}}.svg'>\r\n        <div class=\"coin\">\r\n            {{coin.lastPrice}}\r\n        </div>\r\n        <ul>\r\n            <li><a href=\"javascript:void(0)\" (click)=\"SelectTimeFrame('1m')\">1 minute</a></li>\r\n            <li><a href=\"javascript:void(0)\" (click)=\"SelectTimeFrame('1h')\">1 hour</a></li>\r\n            <li><a href=\"javascript:void(0)\" (click)=\"SelectTimeFrame('1d')\">1 day</a></li>\r\n            <li><a href=\"javascript:void(0)\" (click)=\"SelectTimeFrame('1w')\">1 week</a></li>\r\n            <li><a href=\"javascript:void(0)\" (click)=\"SelectTimeFrame('1M')\">1 month</a></li>\r\n        </ul>\r\n\r\n        <app-data-chart #dataChartComponent [Symbol]=\"coin.symbol\" [TimeFrame]=\"TimeFrameSelected\"\r\n            [startTime]=\"StartTime\" [endTime]=\"EndTime\"></app-data-chart>\r\n    </div>\r\n\r\n    <div class=\"Side News\">\r\n        News:\r\n    </div>\r\n</div>"
        },
        {
            "name": "ContactPageComponent",
            "id": "component-ContactPageComponent-c2be0c32b534e905902fbd02e29a16d08b19f42a333d368f12acd62c0b8ba4c0715a45e2d58071e33951b06d86fa95fe7543a058c273fce15a92c037fe089ff8",
            "file": "src/Components/Pages/Main/contact-page/contact-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contact-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./contact-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-page',\r\n  templateUrl: './contact-page.component.html',\r\n  styleUrl: './contact-page.component.css'\r\n})\r\nexport class ContactPageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./contact-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bg-blue-50 dark:bg-slate-800\" id=\"contact\">\r\n    <div class=\"mx-auto max-w-7xl px-4 py-16 sm:px-6 lg:px-8 lg:py-20\">\r\n        <div class=\"mb-4\">\r\n            <div class=\"mb-6 max-w-3xl text-center sm:text-center md:mx-auto md:mb-12\">\r\n                <p class=\"text-base font-semibold uppercase tracking-wide text-blue-600 dark:text-blue-200\">\r\n                    Contact\r\n                </p>\r\n                <h2\r\n                    class=\"font-heading mb-4 font-bold tracking-tight text-gray-900 dark:text-white text-3xl sm:text-5xl\">\r\n                    Get in Touch\r\n                </h2>\r\n                <p class=\"mx-auto mt-4 max-w-3xl text-xl text-gray-600 dark:text-slate-400\">In hac habitasse platea\r\n                    dictumst\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div class=\"flex items-stretch justify-center\">\r\n            <div class=\"grid md:grid-cols-2\">\r\n                <div class=\"h-full pr-6\">\r\n                    <p class=\"mt-3 mb-12 text-lg text-gray-600 dark:text-slate-400\">\r\n                        Class aptent taciti sociosqu ad\r\n                        litora torquent per conubia nostra, per inceptos himenaeos. Duis nec ipsum orci. Ut scelerisque\r\n                        sagittis ante, ac tincidunt sem venenatis ut.\r\n                    </p>\r\n                    <ul class=\"mb-6 md:mb-0\">\r\n                        <li class=\"flex\">\r\n                            <div class=\"flex h-10 w-10 items-center justify-center rounded bg-blue-900 text-gray-50\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"h-6 w-6\">\r\n                                    <path d=\"M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0\"></path>\r\n                                    <path\r\n                                        d=\"M17.657 16.657l-4.243 4.243a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 11.314 0z\">\r\n                                    </path>\r\n                                </svg>\r\n                            </div>\r\n                            <div class=\"ml-4 mb-4\">\r\n                                <h3 class=\"mb-2 text-lg font-medium leading-6 text-gray-900 dark:text-white\">Our Address\r\n                                </h3>\r\n                                <p class=\"text-gray-600 dark:text-slate-400\">1230 Maecenas Street Donec Road</p>\r\n                                <p class=\"text-gray-600 dark:text-slate-400\">New York, EEUU</p>\r\n                            </div>\r\n                        </li>\r\n                        <li class=\"flex\">\r\n                            <div class=\"flex h-10 w-10 items-center justify-center rounded bg-blue-900 text-gray-50\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"h-6 w-6\">\r\n                                    <path\r\n                                        d=\"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2\">\r\n                                    </path>\r\n                                    <path d=\"M15 7a2 2 0 0 1 2 2\"></path>\r\n                                    <path d=\"M15 3a6 6 0 0 1 6 6\"></path>\r\n                                </svg>\r\n                            </div>\r\n                            <div class=\"ml-4 mb-4\">\r\n                                <h3 class=\"mb-2 text-lg font-medium leading-6 text-gray-900 dark:text-white\">Contact\r\n                                </h3>\r\n                                <p class=\"text-gray-600 dark:text-slate-400\">Mobile: +1 (123) 456-7890</p>\r\n                                <p class=\"text-gray-600 dark:text-slate-400\">Mail: 'shai239&#64;gmail.com</p>\r\n                            </div>\r\n                        </li>\r\n                        <li class=\"flex\">\r\n                            <div class=\"flex h-10 w-10 items-center justify-center rounded bg-blue-900 text-gray-50\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"h-6 w-6\">\r\n                                    <path d=\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\"></path>\r\n                                    <path d=\"M12 7v5l3 3\"></path>\r\n                                </svg>\r\n                            </div>\r\n                            <div class=\"ml-4 mb-4\">\r\n                                <h3 class=\"mb-2 text-lg font-medium leading-6 text-gray-900 dark:text-white\">Working\r\n                                    hours</h3>\r\n                                <p class=\"text-gray-600 dark:text-slate-400\">Monday - Friday: 08:00 - 17:00</p>\r\n                                <p class=\"text-gray-600 dark:text-slate-400\">Saturday &amp; Sunday: 08:00 - 12:00</p>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"card h-fit max-w-6xl p-5 md:p-12\" id=\"form\">\r\n                    <h2 class=\"mb-4 text-2xl font-bold\">Ready to Get Started?</h2>\r\n                    <form id=\"contactForm\">\r\n                        <div class=\"mb-6\">\r\n                            <div class=\"mx-0 mb-1 sm:mb-4\">\r\n                                <div class=\"mx-0 mb-1 sm:mb-4\">\r\n                                    <label for=\"name\" class=\"pb-1 text-xs uppercase tracking-wider\"></label><input type=\"text\" id=\"name\" autocomplete=\"given-name\" placeholder=\"Your name\" class=\"mb-2 w-full rounded-md border border-gray-400 py-2 pl-2 pr-4 shadow-md dark:text-gray-300 sm:mb-0\" name=\"name\">\r\n                                </div>\r\n                                <div class=\"mx-0 mb-1 sm:mb-4\">\r\n                                    <label for=\"email\" class=\"pb-1 text-xs uppercase tracking-wider\"></label><input type=\"email\" id=\"email\" autocomplete=\"email\" placeholder=\"Your email address\" class=\"mb-2 w-full rounded-md border border-gray-400 py-2 pl-2 pr-4 shadow-md dark:text-gray-300 sm:mb-0\" name=\"email\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mx-0 mb-1 sm:mb-4\">\r\n                                <label for=\"textarea\" class=\"pb-1 text-xs uppercase tracking-wider\"></label><textarea id=\"textarea\" name=\"textarea\" cols=\"30\" rows=\"5\" placeholder=\"Write your message...\" class=\"mb-2 w-full rounded-md border border-gray-400 py-2 pl-2 pr-4 shadow-md dark:text-gray-300 sm:mb-0\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <button type=\"submit\" class=\"w-full bg-blue-800 text-white px-6 py-3 font-xl rounded-md sm:mb-0\">Send Message</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"
        },
        {
            "name": "DataChartComponent",
            "id": "component-DataChartComponent-360fb9b252018076da34746eb2d7a3e431c6bd091607a82bfaa41b0bb0ff0c704e7d98e3161556ae1c8737399170a4ab7a763b46db0bd3f90518644d8b009787",
            "file": "src/Components/Comps/data-chart/data-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-chart",
            "styleUrls": [
                "./data-chart.component.css"
            ],
            "styles": [],
            "template": "<canvas #chartCanvas width=\"250px\" height=\"150px\"></canvas>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "endTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "startTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Symbol",
                    "defaultValue": "'BTCUSDT'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "TimeFrame",
                    "defaultValue": "'1m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartCanvas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLCanvasElement>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartCanvas'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "chartInstance",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Chart | null",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "Lables",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "CreateaGraph",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "destroyChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "GetData",
                    "args": [
                        {
                            "name": "Symbol",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TimeFrame",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startTime",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endTime",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "Symbol",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "TimeFrame",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startTime",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endTime",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCanvasSize",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "width",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "TimeFrameToInterval",
                    "args": [
                        {
                            "name": "TimeFrame",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"1s\" | \"1m\" | \"5m\" | \"15m\" | \"30m\" | 0",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n  returns the interval to show data based on the timeframe selected on the graph.\n",
                    "description": "<p>  returns the interval to show data based on the timeframe selected on the graph.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "TimeFrame",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  ViewChild,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { Coin } from '../../../models/Coin';\r\nimport { BinanceApiService } from '../../../services/Api/BinanceApi/binance-api.service';\r\nimport { DecimalPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-data-chart',\r\n  template: '<canvas #chartCanvas width=\"250px\" height=\"150px\"></canvas>', // Use the same template reference name\r\n  styleUrls: ['./data-chart.component.css'],\r\n})\r\nexport class DataChartComponent implements AfterViewInit, OnChanges {\r\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef<HTMLCanvasElement>; // Use the same template reference name\r\n  @Input() Symbol: string = 'BTCUSDT';\r\n  @Input() TimeFrame: string = '1m';\r\n  @Input() startTime: number = 0;\r\n  @Input() endTime: number = 0;\r\n  @Input() width: number = 0;\r\n  @Input() height: number = 0;\r\n  data: number[] = [];\r\n  chartInstance: Chart | null = null; // Define chartInstance property\r\n  Lables: string[] = [];\r\n\r\n  constructor(private Api: BinanceApiService) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.GetData(this.Symbol, this.TimeFrame, this.startTime, this.endTime);\r\n    this.setCanvasSize(this.width, this.height);\r\n    location.reload;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('changes detected');\r\n    this.destroyChart();\r\n    this.GetData(this.Symbol, this.TimeFrame, this.startTime, this.endTime);\r\n  }\r\n  setCanvasSize(width: number, height: number) {\r\n    const canvas = document.getElementById('chartCanvas') as HTMLCanvasElement;\r\n    console.log(canvas);\r\n    if (canvas) {\r\n      console.log('cavas: ', canvas);\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      // Call your chart rendering function here, or emit an event to trigger chart rendering\r\n    }\r\n  }\r\n  CreateaGraph() {\r\n    if (this.chartCanvas && this.chartCanvas.nativeElement) {\r\n    }\r\n    Chart.register(...registerables); // Register the necessary components for Chart.js\r\n    const ctx = this.chartCanvas.nativeElement.getContext('2d'); // Get the canvas context\r\n\r\n    if (ctx) {\r\n      this.chartInstance = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: 'Data',\r\n              data: this.data,\r\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n            x: {\r\n              beginAtZero: true,\r\n              // Add x-axis options\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false, // Hide the legend (including the default button)\r\n            },\r\n            tooltip: {\r\n              mode: 'nearest', // Display tooltip for the nearest data point\r\n              intersect: false, // Don't require exact hover position\r\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n              borderColor: 'rgba(255, 255, 255, 0.5)',\r\n              borderWidth: 1,\r\n              titleColor: 'white',\r\n              bodyColor: 'white',\r\n              displayColors: false, // Hide color boxes\r\n              padding: 10,\r\n              cornerRadius: 5,\r\n              caretSize: 5,\r\n              caretPadding: 5,\r\n              position: 'average',\r\n              callbacks: {\r\n                // Customize tooltip label\r\n                label: function (context) {\r\n                  return (\r\n                    'Value: $ ' +\r\n                    new DecimalPipe('en-US').transform(\r\n                      context.parsed.y,\r\n                      '1.0-2'\r\n                    )\r\n                  );\r\n                },\r\n              }, // Positioning mode\r\n            },\r\n          },\r\n        },\r\n      });\r\n      console.log('chart: ', this.chartInstance);\r\n    } else {\r\n      console.error('Canvas context is null.');\r\n    }\r\n  }\r\n  GetData(\r\n    Symbol: string,\r\n    TimeFrame: string,\r\n    startTime: number,\r\n    endTime: number\r\n  ): void {\r\n    this.Api.getKlinesData(Symbol, TimeFrame).subscribe(\r\n      (data) => {\r\n        console.log('data from getklines: ', data);\r\n        const closePrices = data.map((item) => item.close);\r\n        this.data = closePrices;\r\n        this.CreateaGraph();\r\n        // localStorage.setItem(\"Data\", JSON.stringify(closePrices));\r\n      },\r\n      (error) => {\r\n        // Handle any errors that occurred during the API call\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    );\r\n  }\r\n  destroyChart() {\r\n    if (this.chartInstance) {\r\n      this.chartInstance.destroy(); // Destroy the existing chart instance\r\n      this.chartInstance = null; // Set chart instance to null\r\n    }\r\n  }\r\n  /**\r\n   *   returns the interval to show data based on the timeframe selected on the graph.\r\n   */\r\n\r\n  TimeFrameToInterval(TimeFrame: string) {\r\n    switch (TimeFrame) {\r\n      case '1m':\r\n        return '1s';\r\n      case '1h':\r\n        return '1m';\r\n      case '1d':\r\n        return '5m';\r\n      case '1w':\r\n        return '15m';\r\n      case '1M':\r\n        return '30m';\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./data-chart.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnChanges"
            ]
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-ff53d67cb7c1ad32f494896341db756f2ad955291d10863cd18c5e71b5b835ea8cb4dec388381c33fe12342075db4bdf09f09f0446284c4c9eb71ef805ffe4e4",
            "file": "src/Components/Pages/Main/home-page/home-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Coins",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Coin[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "PopulateCoinsWindows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n  Renderer2,\r\n  ElementRef,\r\n  HostListener,\r\n} from '@angular/core';\r\nimport { Coin } from '../../../../models/Coin';\r\nimport { BinanceApiService } from '../../../../services/Api/BinanceApi/binance-api.service';\r\nimport { fadeInOut, fadeOnScroll } from '../../../../app/Shared/animations';\r\nimport { HtmlParser } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrl: './home-page.component.css',\r\n  animations: [fadeInOut],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  constructor(private Api: BinanceApiService) {}\r\n\r\n  Coins: Coin[] = [];\r\n  \r\n  ngOnInit(): void {\r\n    this.PopulateCoinsWindows();\r\n  }\r\n\r\n  PopulateCoinsWindows() {\r\n    this.Api.getTopCoins(2).subscribe((data) => {\r\n      this.Coins = data;\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./home-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <app-loading-animation *ngIf=\"loading\"></app-loading-animation> -->\r\n\r\n<div class=\"custom-container\">\r\n  <div class=\"Headline\" [@fadeInOut]>\r\n    <br>Best place to keep <br>track of the crypto market\r\n    <!-- <p> we're dedicated to providing you with the latest insights, news, and tools to help you navigate the exciting\r\n      world of cryptocurrencies.\r\n    </p> -->\r\n  </div>\r\n\r\n  <main>\r\n    <section>\r\n      <div class=\"description\">\r\n        <div class=\"coins\">\r\n          <app-coin-info *ngFor=\"let coin of Coins\" [Coin]=\"coin\"></app-coin-info>\r\n        </div>\r\n\r\n        <div class=\"window\">\r\n          <!-- <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\">\r\n            <path\r\n              d=\"M280-160 80-360l200-200 56 57-103 103h287v80H233l103 103-56 57Zm400-240-56-57 103-103H440v-80h287L624-743l56-57 200 200-200 200Z\" />\r\n          </svg> -->\r\n          We've made selling cryptocurrency a seamless and secure experience. Whether you're\r\n          looking to cash out your profits or adjust your portfolio, our user-friendly platform offers a straightforward\r\n          process for selling your digital assets.\r\n          <img src=\"./assets/Images/Trade.jpg\">\r\n\r\n        </div>\r\n        <div class=\"window\">\r\n\r\n          <!-- <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\">\r\n            <path\r\n              d=\"M570-104q-23 23-57 23t-57-23L104-456q-11-11-17.5-26T80-514v-286q0-33 23.5-56.5T160-880h286q17 0 32 6.5t26 17.5l352 353q23 23 23 56.5T856-390L570-104Zm-57-56 286-286-353-354H160v286l353 354ZM260-640q25 0 42.5-17.5T320-700q0-25-17.5-42.5T260-760q-25 0-42.5 17.5T200-700q0 25 17.5 42.5T260-640ZM160-800Z\" />\r\n          </svg> -->\r\n          Discover the seamless world of selling cryptocurrencies with [Your Exchange Name]. Our platform is designed to\r\n          empower you with a straightforward and secure process, making selling digital assets a smooth and rewarding\r\n          experience.\r\n          <img src=\"./assets/Images/Description photo.png\">\r\n        </div>\r\n        <div class=\"window\">\r\n          <!-- <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\">\r\n            <path\r\n              d=\"M280-80q-33 0-56.5-23.5T200-160q0-33 23.5-56.5T280-240q33 0 56.5 23.5T360-160q0 33-23.5 56.5T280-80Zm400 0q-33 0-56.5-23.5T600-160q0-33 23.5-56.5T680-240q33 0 56.5 23.5T760-160q0 33-23.5 56.5T680-80ZM246-720l96 200h280l110-200H246Zm-38-80h590q23 0 35 20.5t1 41.5L692-482q-11 20-29.5 31T622-440H324l-44 80h480v80H280q-45 0-68-39.5t-2-78.5l54-98-144-304H40v-80h130l38 80Zm134 280h280-280Z\" />\r\n          </svg> -->\r\n          Embark on a journey of buying cryptocurrencies with ease at [Your Exchange Name]. Our platform is designed to\r\n          provide you with a streamlined and secure process, ensuring that purchasing digital assets is a\r\n          straightforward and rewarding experience.\r\n          <img src=\"./assets/Images/Buy.jpg\">\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n  </main>\r\n\r\n</div>"
        },
        {
            "name": "LoadingAnimtaionComponent",
            "id": "component-LoadingAnimtaionComponent-7cedc893a88629629cb9dfe0131b01b26e27f46bdc67c2a3f0b7436ad787f4b747a3ae9f5bcfb4cabe90a32f17d464b0e3f7f610f535ff0fecbf3ff1913721be",
            "file": "src/Components/Comps/loading-animtaion/loading-animtaion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loading-animtaion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./loading-animtaion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-animtaion',\r\n  templateUrl: './loading-animtaion.component.html',\r\n  styleUrl: './loading-animtaion.component.css'\r\n})\r\nexport class LoadingAnimtaionComponent {\r\n\r\n}\r\n",
            "styleUrl": "./loading-animtaion.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"lds-circle\"><div></div></div>"
        },
        {
            "name": "MarketPageComponent",
            "id": "component-MarketPageComponent-47445bbb0b1a7198248b4c39c5f75bde902f100daa58f2f686bf6f08b58945c65ad14ad6713121ebdd492e476aad0f8f108d742622ab7234b4e0a16ec40ecb8d",
            "file": "src/Components/Pages/Main/market-page/market-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-market-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./market-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "CoinsTable",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Coin[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "MarketData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "showTable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "title",
                    "defaultValue": "'CryptoAPI'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "PopulateCoinsTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n  Renderer2,\r\n  ElementRef,\r\n  HostListener,\r\n} from '@angular/core';\r\nimport { Coin } from '../../../../models/Coin';\r\nimport { BinanceApiService } from '../../../../services/Api/BinanceApi/binance-api.service';\r\nimport { fadeInOut, fadeOnScroll } from '../../../../app/Shared/animations';\r\nimport { HtmlParser } from '@angular/compiler';\r\nimport { HourlyChangePipe } from '../../../../pipes/HourlyChangePercentage/hourly-change.pipe';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-market-page',\r\n  templateUrl: './market-page.component.html',\r\n  styleUrl: './market-page.component.css',\r\n})\r\nexport class MarketPageComponent {\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private el: ElementRef,\r\n    private Api: BinanceApiService\r\n  ) {}\r\n\r\n  title = 'CryptoAPI';\r\n  MarketData: any;\r\n  CoinsTable: Coin[] = [];\r\n  loading: boolean = true;\r\n  showTable = false;\r\n\r\n  ngOnInit(): void {\r\n    this.PopulateCoinsTable();\r\n  }\r\n\r\n  PopulateCoinsTable() {\r\n    this.Api.getTopCoins(5).subscribe((data) => {\r\n      if (Array.isArray(data) && data.length > 0) {\r\n        this.CoinsTable = data;\r\n        this.Api.getHourlyChange(this.CoinsTable) \r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./market-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "Api",
                        "type": "BinanceApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"Container\">\r\n  <div class=\"Headline\">\r\n    <h1>Unlocking Financial Freedom</h1>\r\n    <h2>Explore the Latest Trends and Opportunities in the Crypto Market</h2>\r\n  </div>\r\n  <!-- <img src=\"./assets/Images/HomePageImage2.png\" alt=\"\"> -->\r\n  <app-loading-animtaion *ngIf=\"loading\"></app-loading-animtaion>\r\n  <table *ngIf=\"!loading\" class=\"custom-table\">\r\n    <thead>\r\n\r\n      <th class=\"IconRow hide-on-small-screen-1\">Icon</th>\r\n      <th class=\"hide-on-small-screen-1\">Coin</th>\r\n      <th class=\"hide-on-small-screen-1\">Latest Price</th>\r\n      <th class=\"hide-on-small-screen-1\">24h%</th>\r\n      <th class=\"hide-on-small-screen-1\">1h%</th>\r\n      <!-- <th class=\"hide-on-small-screen-1\">7d%</th> -->\r\n      <th class=\"hide-on-small-screen-1\">info</th>\r\n\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let Coin of CoinsTable\">\r\n        <td class=\"icon\">\r\n          <img src='./assets/Coin-icons/{{Coin.symbol.replace(\"USDT\", \"\").toLowerCase()}}.svg'\r\n            onerror=\"this.src='./assets/Coin-icons/not-available-circle.png'\" height=\"40px\" width=\"40px\">\r\n        </td>\r\n        <td class=\"symbol-cell\">\r\n          {{ Coin.symbol }}\r\n        </td>\r\n\r\n        <td class=\"price-cell\" [ngClass]=\"{ 'negative': Coin.lastPrice < 0, 'positive': Coin.lastPrice >= 0 }\">\r\n          ${{ Coin.lastPrice }}\r\n        </td>\r\n        <td class=\"change-cell hide-on-small-screen-1\"\r\n          [ngClass]=\"{ 'negative': Coin.priceChangePercent < 0, 'positive': Coin.priceChangePercent >= 0 }\">\r\n          {{ Coin.priceChangePercent > 0 ? \"+\" : \"\" }} {{ Coin.priceChangePercent }}%\r\n        </td>\r\n        <td class=\"change-cell hide-on-small-screen-1\"\r\n          [ngClass]=\"{ 'negative': Coin.priceChange < 0, 'positive': Coin.priceChange >= 0 }\">\r\n          {{ Coin.HourlyPriceChangePercent > 0 ? \"+\" : \"\" }} {{ Coin.HourlyPriceChangePercent }}\r\n          %\r\n\r\n        </td>\r\n        <!-- <td class=\" change-cell hide-on-small-screen-1\"\r\n          [ngClass]=\"{ 'negative': Coin.priceChange.weeklyChange < 0, 'positive': Coin.priceChange.weeklyChange >= 0 }\">\r\n          {{ Coin.priceChange.weeklyChange > 0 ? \"+\" : \"\" }} {{ Coin.priceChange.weeklyChange }}%\r\n        </td> -->\r\n        <td class=\"InfoIcon\">\r\n          <a [routerLink]=\"['/Coin', Coin.symbol]\">\r\n            <svg height=\"20px\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\" />\r\n            </svg>\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n\r\n</div>"
        },
        {
            "name": "NewsPageComponent",
            "id": "component-NewsPageComponent-6a6ec382d087f518be3566f049a58dbbcea7a9b05c170ebb3c773b28e8755692938936bbf765a0650836e99d5f23b84b74f69eef19359e0fad24e20aee0f4343",
            "file": "src/Components/Pages/Main/news-page/news-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DatePipe",
                    "type": "pipe"
                }
            ],
            "selector": "app-news-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./news-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Article",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "articles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Article[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "TopArticles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Article[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "GetNews",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "TitleClicked",
                    "args": [
                        {
                            "name": "article",
                            "type": "Article",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "article",
                            "type": "Article",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "togglemenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { NewsApiService } from '../../../../services/Api/NewsApi/news-api.service';\r\nimport { Article } from '../../../../models/Articles';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-news-page',\r\n  templateUrl: './news-page.component.html',\r\n  styleUrl: './news-page.component.css',\r\n  providers: [DatePipe]\r\n})\r\nexport class NewsPageComponent implements OnInit {\r\n  private articles: Article[] = [];\r\n  TopArticles: Article[] = [];\r\n  Article!: Article;\r\n\r\n  constructor(private News: NewsApiService, private datePipe: DatePipe) {}\r\n\r\n  ngOnInit(): void {\r\n    this.GetNews();\r\n  }\r\n\r\n  TitleClicked(article: Article) {\r\n    this.Article = article;\r\n  }\r\n\r\n  GetNews() {\r\n    this.News.getNews().subscribe((data) => {\r\n      this.articles = data.articles;\r\n      this.TopArticles = this.articles.slice(0, 10);\r\n      console.log('news comp: ', this.TopArticles);\r\n      console.log(\"article:\", this.Article)\r\n    });\r\n  }\r\n\r\n  togglemenu() {\r\n    var articlesSection = document.getElementById('titles');\r\n    articlesSection?.classList.toggle('visible');\r\n  }\r\n\r\n  \r\n}\r\n",
            "styleUrl": "./news-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "News",
                        "type": "NewsApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "datePipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "News",
                        "type": "NewsApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "datePipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"Container\">\r\n    <!-- <div id=\"titles\">\r\n        <div class=\"title\" (click)=\"TitleClicked(article)\" *ngFor=\"let article of TopArticles\">\r\n            {{article.title}}\r\n        </div>\r\n    </div> -->\r\n    <!-- <button id=\"TitlesButton\" (click)=\"togglemenu()\" title=\"Click to open menu\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" style=\"fill: rgb(254, 253, 253);\"><path d=\"m12.707 7.707-1.414-1.414L5.586 12l5.707 5.707 1.414-1.414L8.414 12z\"></path><path d=\"M16.293 6.293 10.586 12l5.707 5.707 1.414-1.414L13.414 12l4.293-4.293z\"></path></svg></button> -->\r\n    <div class=\"articles-section\">\r\n        <article *ngFor=\"let Article of TopArticles\">\r\n            <a href=\"{{Article.url}}\" target=\"_blank\" title=\"{{Article.url}}\">\r\n                <img src=\"{{Article.urlToImage}}\" alt=\"no img available\">\r\n                <h1>{{Article.title}}</h1>\r\n                <div class=\"About\">\r\n                    {{Article.publishedAt | date:'dd/MM/yyyy HH:MM'}}\r\n                    {{Article.author}}\r\n                </div>\r\n                <!-- {{Article.description}} -->\r\n            </a>\r\n        </article>\r\n    </div>\r\n\r\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PortfolioPageComponent",
            "id": "component-PortfolioPageComponent-6acaa0441894d7cb2ed613b4e2dd5a0428e35b1962a1860c2ac7147ff0d8a9bb544d3e12a1d13d67995fb6a5463012e06e25e02b3bd2d88dc2f25743572d89bc",
            "file": "src/Components/Pages/DemoTrade/portfolio-page/portfolio-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-portfolio-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./portfolio-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-portfolio-page',\n  templateUrl: './portfolio-page.component.html',\n  styleUrl: './portfolio-page.component.css'\n})\nexport class PortfolioPageComponent {\n\n}\n",
            "styleUrl": "./portfolio-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>portfolio-page works!</p>\n"
        },
        {
            "name": "TradingPageComponent",
            "id": "component-TradingPageComponent-262bea7d8e6e4bd2126e369ec93f212bcb95f30299bfd63a9298de92f37864a29ece0d96f7abd0c46f097454bda0529140ceb060811761b29276e4aa1be31fe3",
            "file": "src/Components/Pages/DemoTrade/trading-page/trading-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trading-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./trading-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-trading-page',\n  templateUrl: './trading-page.component.html',\n  styleUrl: './trading-page.component.css'\n})\nexport class TradingPageComponent {\n\n}\n",
            "styleUrl": "./trading-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>trading-page works!</p>\n"
        },
        {
            "name": "TrendingPageComponent",
            "id": "component-TrendingPageComponent-faa21fb818f36e660b93bdd4fcd8c87064bb1f4c33d7f9c85fcd928cdfd2957e5b8c5b735f747e7492eea83b4bbe823571d2d431f76e2c018ef1a0b79f42fc8f",
            "file": "src/Components/Pages/Main/trending-page/trending-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trending-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./trending-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-trending-page',\r\n  templateUrl: './trending-page.component.html',\r\n  styleUrl: './trending-page.component.css'\r\n})\r\nexport class TrendingPageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./trending-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>trending-page works!</p>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-62dcdfb1c5da7fe65c86747f6f45b3972a2a81de57acef940574ebf39c2b874bcae021f2b37316e555461d6f746d6209bcef4ead75e792fc205c97337019ff94",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { provideCharts, withDefaultRegisterables } from 'ng2-charts';\r\nimport { HourlyChangePipe } from '../pipes/HourlyChangePercentage/hourly-change.pipe';\r\nimport { CoinPageComponent } from '../Components/Pages/Main/coin-page/coin-page.component';\r\nimport { HomePageComponent } from '../Components/Pages/Main/home-page/home-page.component';\r\nimport { ContactPageComponent } from '../Components/Pages/Main/contact-page/contact-page.component';\r\nimport { MarketPageComponent } from '../Components/Pages/Main/market-page/market-page.component';\r\nimport { AboutPageComponent } from '../Components/Pages/Main/about-page/about-page.component';\r\nimport { NewsPageComponent } from '../Components/Pages/Main/news-page/news-page.component';\r\nimport { TrendingPageComponent } from '../Components/Pages/Main/trending-page/trending-page.component';\r\nimport { CoinListComponent } from '../Components/Comps/coin-list/coin-list.component';\r\nimport { CoinInfoComponent } from '../Components/Comps/coin-info/coin-info.component';\r\nimport { DataChartComponent } from '../Components/Comps/data-chart/data-chart.component';\r\nimport { LoadingAnimtaionComponent } from '../Components/Comps/loading-animtaion/loading-animtaion.component';\r\nimport { TradingPageComponent } from '../Components/Pages/DemoTrade/trading-page/trading-page.component';\r\nimport { PortfolioPageComponent } from '../Components/Pages/DemoTrade/portfolio-page/portfolio-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CoinListComponent,\r\n    CoinInfoComponent,\r\n    HomePageComponent,\r\n    ContactPageComponent,\r\n    MarketPageComponent,\r\n    AboutPageComponent,\r\n    NewsPageComponent,\r\n    TrendingPageComponent,\r\n    CoinPageComponent,\r\n    DataChartComponent,\r\n    LoadingAnimtaionComponent,\r\n    HourlyChangePipe,\r\n    TradingPageComponent,\r\n    PortfolioPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [provideCharts(withDefaultRegisterables())],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutPageComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CoinInfoComponent"
                        },
                        {
                            "name": "CoinListComponent"
                        },
                        {
                            "name": "CoinPageComponent"
                        },
                        {
                            "name": "ContactPageComponent"
                        },
                        {
                            "name": "DataChartComponent"
                        },
                        {
                            "name": "HomePageComponent"
                        },
                        {
                            "name": "HourlyChangePipe"
                        },
                        {
                            "name": "LoadingAnimtaionComponent"
                        },
                        {
                            "name": "MarketPageComponent"
                        },
                        {
                            "name": "NewsPageComponent"
                        },
                        {
                            "name": "PortfolioPageComponent"
                        },
                        {
                            "name": "TradingPageComponent"
                        },
                        {
                            "name": "TrendingPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3dd6f9637fe611ef3f30717be55dbe5fca81aaf651da8e37751f265e328cbbce76a48ccd1964c98c6a0b6015d062eaa74961f10ff07130696ad256e394a1b75b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HomePageComponent } from '../Components/Pages/Main/home-page/home-page.component';\r\nimport { ContactPageComponent } from '../Components/Pages/Main/contact-page/contact-page.component';\r\nimport { MarketPageComponent } from '../Components/Pages/Main/market-page/market-page.component';\r\nimport { AboutPageComponent } from '../Components/Pages/Main/about-page/about-page.component';\r\nimport { CoinPageComponent } from '../Components/Pages/Main/coin-page/coin-page.component';\r\nimport { NewsPageComponent } from '../Components/Pages/Main/news-page/news-page.component';\r\nimport { TrendingPageComponent } from '../Components/Pages/Main/trending-page/trending-page.component';\r\nimport { DataChartComponent } from '../Components/Comps/data-chart/data-chart.component';\r\nimport { TradingPageComponent } from '../Components/Pages/DemoTrade/trading-page/trading-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomePageComponent },\r\n  { path: 'About', component: AboutPageComponent },\r\n  { path: 'Coin/:symbol', component: CoinPageComponent },\r\n  { path: 'Contact', component: ContactPageComponent },\r\n  { path: 'Market', component: MarketPageComponent },\r\n  { path: 'News', component: NewsPageComponent },\r\n  { path: 'Trending', component: TrendingPageComponent },\r\n  { path: 'Trade/:symbol', component: TradingPageComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-ce30d6cec18c49f4c1b8f71c87041b321c22c21af106ae927a2f27da93129fb729d5d89c2ba62b1de105493cc427f0229f3a0edca16439bdd0b38e2b60d18ccc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/Shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { fadeInOut } from './animations'; \r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, BrowserAnimationsModule],\r\n  exports: [],\r\n  providers: [],\r\n})\r\nexport class SharedModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "fadeInOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Shared/animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('fadeInOut', [\r\n  transition(':enter', [style({ opacity: 0 }), animate('1s', style({ opacity: 1 }))]),\r\n  transition(':leave', [animate('1s', style({ opacity: 0 }))]),\r\n])"
            }
        ],
        "functions": [
            {
                "name": "fadeOnScroll",
                "file": "src/app/Shared/animations.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "scrollElement",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "AnimationTriggerMetadata",
                "jsdoctags": [
                    {
                        "name": "scrollElement",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/Shared/animations.ts": [
                {
                    "name": "fadeInOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Shared/animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('fadeInOut', [\r\n  transition(':enter', [style({ opacity: 0 }), animate('1s', style({ opacity: 1 }))]),\r\n  transition(':leave', [animate('1s', style({ opacity: 0 }))]),\r\n])"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/Shared/animations.ts": [
                {
                    "name": "fadeOnScroll",
                    "file": "src/app/Shared/animations.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "scrollElement",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "AnimationTriggerMetadata",
                    "jsdoctags": [
                        {
                            "name": "scrollElement",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomePageComponent"
                    },
                    {
                        "path": "About",
                        "component": "AboutPageComponent"
                    },
                    {
                        "path": "Coin/:symbol",
                        "component": "CoinPageComponent"
                    },
                    {
                        "path": "Contact",
                        "component": "ContactPageComponent"
                    },
                    {
                        "path": "Market",
                        "component": "MarketPageComponent"
                    },
                    {
                        "path": "News",
                        "component": "NewsPageComponent"
                    },
                    {
                        "path": "Trending",
                        "component": "TrendingPageComponent"
                    },
                    {
                        "path": "Trade/:symbol",
                        "component": "TradingPageComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "src/Components/Comps/coin-info/coin-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/Components/Comps/coin-list/coin-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/Components/Comps/data-chart/data-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataChartComponent",
                "coveragePercent": 5,
                "coverageCount": "1/19",
                "status": "low"
            },
            {
                "filePath": "src/Components/Comps/loading-animtaion/loading-animtaion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingAnimtaionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/DemoTrade/portfolio-page/portfolio-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PortfolioPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/DemoTrade/trading-page/trading-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TradingPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/Main/about-page/about-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/Main/coin-page/coin-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/Main/contact-page/contact-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/Main/home-page/home-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/Main/market-page/market-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarketPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/Main/news-page/news-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/Components/Pages/Main/trending-page/trending-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrendingPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Shared/animations.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fadeOnScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Shared/animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fadeInOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/models/Articles.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Article",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/models/Articles.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Root",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/models/Articles.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Source",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/models/CandleStickData.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandleStickData",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/models/Coin.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Coin",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/pipes/HourlyChangePercentage/hourly-change.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "HourlyChangePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/Accessories/internet-connection/internet-connection.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InternetConnectionService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/services/Accessories/scrolling/scrolling.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ScrollToTopService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/services/Api/BinanceApi/binance-api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BinanceApiService",
                "coveragePercent": 30,
                "coverageCount": "4/13",
                "status": "medium"
            },
            {
                "filePath": "src/services/Api/NewsApi/news-api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NewsApiService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}